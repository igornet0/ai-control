[project]
name = "ai-control"
version = "0.1.0"
description = ""
authors = [
    {name = "igornet0"}
]
readme = "README.md"
requires-python = ">=3.12, <4.0"
dependencies = [
    "sqlalchemy[asyncio] (>=2.0.41,<3.0.0)",
    "fastapi[standard] (>=0.115.14,<0.116.0)",
    "pydantic-settings (>=2.10.1,<3.0.0)",
    "passlib (>=1.7.4,<2.0.0)",
    "asyncpg (>=0.30.0,<0.31.0)",
    "alembic (>=1.16.2,<2.0.0)",
    "python-jose[cryptography] (>=3.5.0,<4.0.0)",
    "aio-pika (>=9.5.5,<10.0.0)",
    "bcrypt (>=4.3.0,<5.0.0)",
    "websockets (>=14.1,<15.0.0)",
]


[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=backend",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-fail-under=80",
    "-v",
    "-n0"
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "docker: Tests requiring Docker",
    "slow: Slow running tests",
    "rabbitmq: Tests requiring RabbitMQ",
    "websocket: WebSocket functionality tests"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]
asyncio_mode = "auto"


[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pytest-asyncio = "^1.1.0"
pytest-cov = "^6.2.1"
httpx = "^0.28.1"

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "httpx>=0.24.0",
    "pyyaml>=6.0.0"
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
