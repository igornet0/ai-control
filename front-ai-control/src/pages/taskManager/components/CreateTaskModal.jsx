import React, { useState, useEffect } from 'react';
import { projectService } from '../../../services/projectService';
import CustomSelect from '../selector/CustomSelect';
import TaskTags from './TaskTags';
import './CreateTaskModal.css';

const statusOptions = [
  { value: "created", label: "–°–æ–∑–¥–∞–Ω–∞" },
  { value: "in_progress", label: "–í —Ä–∞–±–æ—Ç–µ" },
  { value: "review", label: "–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ" },
  { value: "completed", label: "–ó–∞–≤–µ—Ä—à–µ–Ω–∞" },
  { value: "cancelled", label: "–û—Ç–º–µ–Ω–µ–Ω–∞" },
  { value: "on_hold", label: "–ù–∞ –ø–∞—É–∑–µ" },
  { value: "blocked", label: "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞" }
];

const priorityOptions = [
  { value: "low", label: "–ù–∏–∑–∫–∏–π" },
  { value: "medium", label: "–°—Ä–µ–¥–Ω–∏–π" },
  { value: "high", label: "–í—ã—Å–æ–∫–∏–π" },
  { value: "critical", label: "–ö—Ä–∏—Ç–∏—á–Ω—ã–π" },
  { value: "urgent", label: "–°—Ä–æ—á–Ω—ã–π" }
];

const taskTypeOptions = [
  { value: "task", label: "–ó–∞–¥–∞—á–∞" },
  { value: "bug", label: "–û—à–∏–±–∫–∞" },
  { value: "feature", label: "–§—É–Ω–∫—Ü–∏—è" },
  { value: "story", label: "–ò—Å—Ç–æ—Ä–∏—è" },
  { value: "epic", label: "–≠–ø–∏–∫" },
  { value: "subtask", label: "–ü–æ–¥–∑–∞–¥–∞—á–∞" }
];

// –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –Ω–∞–±–æ—Ä —à–∞–±–ª–æ–Ω–æ–≤ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∑–∞–¥–∞—á
const TASK_TEMPLATES = [
  {
    id: 1,
    name: "üêõ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–≥–∞",
    description: "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫",
    category: "Bug Fix",
    template: {
      title: "–ò—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫—É: ",
      description: "–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã:\n\n–®–∞–≥–∏ –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:\n1. \n2. \n3. \n\n–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:\n\n–§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:\n\n–í–ª–∏—è–Ω–∏–µ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n\n–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:",
      task_type: "bug",
      priority: "high",
      tags: "bug,–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ,–∫—Ä–∏—Ç–∏—á–Ω–æ"
    }
  },
  {
    id: 2,
    name: "‚ú® –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è",
    description: "–®–∞–±–ª–æ–Ω –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π",
    category: "Feature",
    template: {
      title: "–î–æ–±–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é: ",
      description: "–û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n\n–ë–∏–∑–Ω–µ—Å-—Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:\n\n–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:\n\n–ö—Ä–∏—Ç–µ—Ä–∏–∏ –ø—Ä–∏–µ–º–∫–∏:\n- [ ] \n- [ ] \n- [ ] \n\n–î–∏–∑–∞–π–Ω/–ú–∞–∫–µ—Ç—ã:\n\n–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:",
      task_type: "feature",
      priority: "medium",
      tags: "feature,—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞,–Ω–æ–≤–∞—è-—Ñ—É–Ω–∫—Ü–∏—è"
    }
  },
  {
    id: 3,
    name: "üìã –ö–æ–¥-—Ä–µ–≤—å—é",
    description: "–®–∞–±–ª–æ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–¥–∞",
    category: "Review",
    template: {
      title: "–ö–æ–¥-—Ä–µ–≤—å—é: ",
      description: "–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:\n\n–ü—É–ª–ª-—Ä–µ–∫–≤–µ—Å—Ç/–í–µ—Ç–∫–∞:\n\n–ß–µ–∫-–ª–∏—Å—Ç:\n- [ ] –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è\n- [ ] –ü–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏\n- [ ] –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å\n- [ ] –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å\n- [ ] –ß–∏—Ç–∞–µ–º–æ—Å—Ç—å –∫–æ–¥–∞\n- [ ] –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è\n\n–û—Å–æ–±–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ:",
      task_type: "task",
      priority: "medium",
      tags: "review,–∫–∞—á–µ—Å—Ç–≤–æ,–∫–æ–¥"
    }
  },
  {
    id: 4,
    name: "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
    description: "–®–∞–±–ª–æ–Ω –¥–ª—è –∑–∞–¥–∞—á —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
    category: "Testing",
    template: {
      title: "–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å: ",
      description: "–û–±–ª–∞—Å—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:\n\n–¢–∏–ø —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:\n- [ ] –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ\n- [ ] –†–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω–æ–µ\n- [ ] –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–æ–µ\n- [ ] UI/UX\n\n–¢–µ—Å—Ç-–∫–µ–π—Å—ã:\n1. \n2. \n3. \n\n–û–∫—Ä—É–∂–µ–Ω–∏–µ:\n\n–û–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:\n\n–ö—Ä–∏—Ç–µ—Ä–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è:",
      task_type: "task",
      priority: "high",
      tags: "testing,qa,–ø—Ä–æ–≤–µ—Ä–∫–∞"
    }
  },
  {
    id: 5,
    name: "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è",
    description: "–®–∞–±–ª–æ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏",
    category: "Documentation",
    template: {
      title: "–°–æ–∑–¥–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é: ",
      description: "–¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏:\n\n–¶–µ–ª—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏:\n\n–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è:\n\n–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:\n- [ ] \n- [ ] \n- [ ] \n\n–§–æ—Ä–º–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞:\n\n–ì–¥–µ –±—É–¥–µ—Ç —Ä–∞–∑–º–µ—â–µ–Ω–∞:\n\n–°—Ä–æ–∫ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏:",
      task_type: "task",
      priority: "low",
      tags: "–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è,–æ–ø–∏—Å–∞–Ω–∏–µ,—Ç–µ—Ö–ø–∏—Å–∞–Ω–∏–µ"
    }
  },
  {
    id: 6,
    name: "üöÄ –†–µ–ª–∏–∑",
    description: "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏ –≤—ã–ø—É—Å–∫ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏",
    category: "Release",
    template: {
      title: "–†–µ–ª–∏–∑ –≤–µ—Ä—Å–∏–∏ ",
      description: "–í–µ—Ä—Å–∏—è:\n\n–ß—Ç–æ –≤–∫–ª—é—á–µ–Ω–æ –≤ —Ä–µ–ª–∏–∑:\n- \n- \n- \n\n–ß–µ–∫-–ª–∏—Å—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏:\n- [ ] –ö–æ–¥-—Ä–µ–≤—å—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ\n- [ ] –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–π–¥–µ–Ω–æ\n- [ ] –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞\n- [ ] Changelog –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω\n- [ ] –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞\n- [ ] –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω\n\n–ü–ª–∞–Ω —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è:\n\n–ü–ª–∞–Ω –æ—Ç–∫–∞—Ç–∞:",
      task_type: "epic",
      priority: "critical",
      tags: "—Ä–µ–ª–∏–∑,–¥–µ–ø–ª–æ–π,production"
    }
  },
  {
    id: 7,
    name: "üîß –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥",
    description: "–£–ª—É—á—à–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–¥–∞",
    category: "Refactoring",
    template: {
      title: "–†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥: ",
      description: "–û–±–ª–∞—Å—Ç—å —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞:\n\n–¢–µ–∫—É—â–∏–µ –ø—Ä–æ–±–ª–µ–º—ã:\n\n–¶–µ–ª–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞:\n- [ ] –£–ª—É—á—à–µ–Ω–∏–µ —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏\n- [ ] –ü–æ–≤—ã—à–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏\n- [ ] –£–ø—Ä–æ—â–µ–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã\n- [ ] –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è\n\n–ü–ª–∞–Ω —Ä–∞–±–æ—Ç—ã:\n1. \n2. \n3. \n\n–†–∏—Å–∫–∏:\n\n–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞:",
      task_type: "task",
      priority: "medium",
      tags: "—Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥,–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è,–∫–æ–¥"
    }
  },
  {
    id: 8,
    name: "üîê –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å",
    description: "–ó–∞–¥–∞—á–∏ –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
    category: "Security",
    template: {
      title: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: ",
      description: "–¢–∏–ø –ø—Ä–æ–±–ª–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:\n\n–û–ø–∏—Å–∞–Ω–∏–µ —É—è–∑–≤–∏–º–æ—Å—Ç–∏:\n\n–£—Ä–æ–≤–µ–Ω—å –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç–∏:\n- [ ] –ù–∏–∑–∫–∏–π\n- [ ] –°—Ä–µ–¥–Ω–∏–π\n- [ ] –í—ã—Å–æ–∫–∏–π\n- [ ] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π\n\n–í–æ–∑–º–æ–∂–Ω—ã–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è:\n\n–ü–ª–∞–Ω –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:\n1. \n2. \n3. \n\n–¢—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:\n\n–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:",
      task_type: "bug",
      priority: "critical",
      tags: "–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å,—É—è–∑–≤–∏–º–æ—Å—Ç—å,–∫—Ä–∏—Ç–∏—á–Ω–æ"
    }
  },
  {
    id: 9,
    name: "üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞",
    description: "–°–±–æ—Ä –∏ –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö",
    category: "Analytics",
    template: {
      title: "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞: ",
      description: "–¶–µ–ª—å –∞–Ω–∞–ª–∏–∑–∞:\n\n–ò—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö:\n\n–ú–µ—Ç—Ä–∏–∫–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è:\n- \n- \n- \n\n–ü–µ—Ä–∏–æ–¥ –∞–Ω–∞–ª–∏–∑–∞:\n\n–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:\n\n–û–∂–∏–¥–∞–µ–º—ã–µ –≤—ã–≤–æ–¥—ã:\n\n–§–æ—Ä–º–∞—Ç –æ—Ç—á–µ—Ç–∞:\n\n–ü–æ–ª—É—á–∞—Ç–µ–ª–∏ –æ—Ç—á–µ—Ç–∞:",
      task_type: "task",
      priority: "medium",
      tags: "–∞–Ω–∞–ª–∏—Ç–∏–∫–∞,–¥–∞–Ω–Ω—ã–µ,–æ—Ç—á–µ—Ç"
    }
  },
  {
    id: 10,
    name: "üé® UI/UX —É–ª—É—á—à–µ–Ω–∏—è",
    description: "–£–ª—É—á—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞",
    category: "Design",
    template: {
      title: "UI/UX: ",
      description: "–û–±–ª–∞—Å—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:\n\n–¢–µ–∫—É—â–∏–µ –ø—Ä–æ–±–ª–µ–º—ã:\n\n–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–µ —É–ª—É—á—à–µ–Ω–∏—è:\n\n–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è:\n\n–ö—Ä–∏—Ç–µ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞:\n- [ ] \n- [ ] \n- [ ] \n\n–¢—Ä–µ–±—É—é—Ç—Å—è –ª–∏ –º–∞–∫–µ—Ç—ã:\n\n–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏:\n\n–í–ª–∏—è–Ω–∏–µ –Ω–∞ –¥—Ä—É–≥–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:",
      task_type: "feature",
      priority: "medium",
      tags: "ui,ux,–¥–∏–∑–∞–π–Ω,–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"
    }
  },
  {
    id: 11,
    name: "‚ö° –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
    description: "–£–ª—É—á—à–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã",
    category: "Performance",
    template: {
      title: "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è: ",
      description: "–ü—Ä–æ–±–ª–µ–º–Ω–∞—è –æ–±–ª–∞—Å—Ç—å:\n\n–¢–µ–∫—É—â–∏–µ –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:\n\n–¶–µ–ª–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏:\n\n–ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n\n–ü–ª–∞–Ω –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:\n1. \n2. \n3. \n\n–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è:\n\n–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–∏—Å–∫–∏:\n\n–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:",
      task_type: "task",
      priority: "high",
      tags: "–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å,–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è,—Å–∫–æ—Ä–æ—Å—Ç—å"
    }
  },
  {
    id: 12,
    name: "ü§ù –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è",
    description: "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏",
    category: "Integration",
    template: {
      title: "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å ",
      description: "–°–∏—Å—Ç–µ–º–∞ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:\n\n–¶–µ–ª—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:\n\n–¢–∏–ø –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:\n- [ ] API\n- [ ] Webhook\n- [ ] –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö\n- [ ] –§–∞–π–ª–æ–≤—ã–π –æ–±–º–µ–Ω\n\n–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –¥–∞–Ω–Ω—ã–º:\n\n–§–æ—Ä–º–∞—Ç –æ–±–º–µ–Ω–∞:\n\n–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è:\n\n–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫:\n\n–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:",
      task_type: "feature",
      priority: "high",
      tags: "–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è,api,–≤–Ω–µ—à–Ω–∏–µ-—Å–∏—Å—Ç–µ–º—ã"
    }
  },
  {
    id: 13,
    name: "üèóÔ∏è –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞",
    description: "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã",
    category: "Infrastructure",
    template: {
      title: "–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞: ",
      description: "–¢–∏–ø —Ä–∞–±–æ—Ç—ã:\n- [ ] –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞\n- [ ] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã\n- [ ] –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥\n- [ ] –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ\n- [ ] –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ\n\n–û–∫—Ä—É–∂–µ–Ω–∏–µ:\n- [ ] Development\n- [ ] Staging\n- [ ] Production\n\n–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:\n\n–ü–ª–∞–Ω –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:\n1. \n2. \n3. \n\n–í—Ä–µ–º—è –ø—Ä–æ—Å—Ç–æ—è:\n\n–ü–ª–∞–Ω –æ—Ç–∫–∞—Ç–∞:",
      task_type: "task",
      priority: "high",
      tags: "–∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞,—Å–µ—Ä–≤–µ—Ä,devops"
    }
  },
  {
    id: 14,
    name: "üì± –ú–æ–±–∏–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
    description: "–ó–∞–¥–∞—á–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
    category: "Mobile",
    template: {
      title: "–ú–æ–±–∏–ª—å–Ω–æ–µ: ",
      description: "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:\n- [ ] iOS\n- [ ] Android\n- [ ] Cross-platform\n\n–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏:\n\n–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:\n\n–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:\n\n–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö:\n\n–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:\n\n–†–∞–∑–º–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:\n\nOffline –ø–æ–¥–¥–µ—Ä–∂–∫–∞:",
      task_type: "feature",
      priority: "medium",
      tags: "–º–æ–±–∏–ª—å–Ω–æ–µ,ios,android,–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
    }
  },
  {
    id: 15,
    name: "üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è",
    description: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ –∑–∞–¥–∞—á",
    category: "Automation",
    template: {
      title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è: ",
      description: "–ü—Ä–æ—Ü–µ—Å—Å –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏:\n\n–¢–µ–∫—É—â–∏–π —Ä—É—á–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å:\n\n–ß–∞—Å—Ç–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:\n\n–í—Ä–µ–º—è —ç–∫–æ–Ω–æ–º–∏–∏:\n\n–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:\n- [ ] –°–∫—Ä–∏–ø—Ç—ã\n- [ ] CI/CD\n- [ ] Cron jobs\n- [ ] Workflow\n\n–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n\n–í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n\n–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫:\n\n–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:",
      task_type: "task",
      priority: "medium",
      tags: "–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è,—Å–∫—Ä–∏–ø—Ç—ã,ci-cd"
    }
  },
  {
    id: 16,
    name: "üéì –û–±—É—á–µ–Ω–∏–µ/–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ",
    description: "–ò–∑—É—á–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π",
    category: "Learning",
    template: {
      title: "–ò–∑—É—á–∏—Ç—å: ",
      description: "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è/–¢–µ–º–∞:\n\n–¶–µ–ª—å –∏–∑—É—á–µ–Ω–∏—è:\n\n–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:\n\n–†–µ—Å—É—Ä—Å—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è:\n- \n- \n- \n\n–í—Ä–µ–º—è –Ω–∞ –∏–∑—É—á–µ–Ω–∏–µ:\n\n–ü–ª–∞–Ω –∏–∑—É—á–µ–Ω–∏—è:\n1. \n2. \n3. \n\n–ö—Ä–∏—Ç–µ—Ä–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è:\n\n–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∑–Ω–∞–Ω–∏—è–º–∏ —Å –∫–æ–º–∞–Ω–¥–æ–π:",
      task_type: "task",
      priority: "low",
      tags: "–æ–±—É—á–µ–Ω–∏–µ,–∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ,—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏"
    }
  }
];

export default function CreateTaskModal({ onClose, onSave }) {
  const [taskData, setTaskData] = useState({
    title: '',
    description: '',
    status: 'created',
    priority: 'medium',
    task_type: 'task',
    due_date: '',
    start_date: '',
    estimated_hours: '',
    tags: '',
    project_id: null,
    no_deadline: true  // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–ª–∞–≥ "–ë–µ–∑ —Å—Ä–æ–∫–∞"
  });

  const [projects, setProjects] = useState([]);
  const [loading, setLoading] = useState(false);
  const [errors, setErrors] = useState({});
  const [newTag, setNewTag] = useState('');
  const [showTemplates, setShowTemplates] = useState(false);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤
  useEffect(() => {
    const loadProjects = async () => {
      try {
        const projectsData = await projectService.getProjects();
        setProjects(projectsData);
      } catch (error) {
        console.error('Error loading projects:', error);
      }
    };
    loadProjects();
  }, []);

  const handleChange = (field, value) => {
    setTaskData(prev => ({ ...prev, [field]: value }));
    // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—è
    if (errors[field]) {
      setErrors(prev => ({ ...prev, [field]: '' }));
    }
  };

  const validateForm = () => {
    const newErrors = {};
    
    if (!taskData.title.trim()) {
      newErrors.title = '–ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ';
    }
    
    if (taskData.estimated_hours && isNaN(taskData.estimated_hours)) {
      newErrors.estimated_hours = '–û—Ü–µ–Ω–∫–∞ –≤ —á–∞—Å–∞—Ö –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º';
    }

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const handleTemplateSelect = (templateData) => {
    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ —à–∞–±–ª–æ–Ω–∞
    setTaskData(prev => ({
      ...prev,
      title: templateData.template.title,
      description: templateData.template.description,
      task_type: templateData.template.task_type,
      priority: templateData.template.priority,
      tags: templateData.template.tags
    }));
    
    console.log('Applied template:', templateData.name);
    setShowTemplates(false);
  };

  const handleSubmit = () => {
    if (!validateForm()) {
      return;
    }

    const taskToSave = {
      title: taskData.title,
      description: taskData.description,
      status: taskData.status,
      task_type: taskData.task_type,
      priority: taskData.priority,
      visibility: 'team',
      due_date: taskData.no_deadline ? null : (taskData.due_date && taskData.due_date.trim() !== '' ? new Date(taskData.due_date).toISOString() : null),
      start_date: taskData.no_deadline ? null : (taskData.start_date && taskData.start_date.trim() !== '' ? new Date(taskData.start_date).toISOString() : null),
      estimated_hours: taskData.estimated_hours && taskData.estimated_hours.trim() !== '' ? parseFloat(taskData.estimated_hours) : null,
      tags: taskData.tags && taskData.tags.trim() !== '' ? taskData.tags.split(',').map(tag => tag.trim()).filter(tag => tag) : [],
      executor_id: null // Fixed: Send null instead of string value
    };

    console.log('Task data being sent:', taskToSave);
    onSave(taskToSave);
    onClose();
  };

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-30 p-4">
      <div className="bg-[#16251C] rounded-md p-6 w-full max-w-2xl text-white relative shadow-lg max-h-[90vh] overflow-y-auto">
        <button
          onClick={onClose}
          className="absolute top-3 right-3 text-gray-400 hover:text-white text-2xl font-bold leading-none"
          aria-label="Close modal"
        >
          ‚úï
        </button>

        <div className="flex justify-between items-center mb-6">
          <h2 className="text-2xl font-semibold">–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É</h2>
          <button
            onClick={() => setShowTemplates(!showTemplates)}
            className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors flex items-center gap-2"
            title="–°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É –∏–∑ –≥–æ—Ç–æ–≤–æ–≥–æ —à–∞–±–ª–æ–Ω–∞"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              className="h-4 w-4"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
                d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
              />
            </svg>
            –°–æ–∑–¥–∞—Ç—å –∏–∑ —à–∞–±–ª–æ–Ω–∞
          </button>
        </div>

        {/* –í—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤ */}
        {showTemplates && (
          <div className="mb-6 bg-[#0f1b16] border border-gray-600 rounded-md p-4">
            <div className="flex justify-between items-center mb-3">
              <h3 className="text-lg font-medium text-green-400">–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω –∑–∞–¥–∞—á–∏</h3>
              <span className="text-sm text-gray-400">{TASK_TEMPLATES.length} —à–∞–±–ª–æ–Ω–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–æ</span>
            </div>
            
            <div className="max-h-80 overflow-y-auto pr-2">
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3">
                {TASK_TEMPLATES.map((template) => (
                  <div
                    key={template.id}
                    onClick={() => handleTemplateSelect(template)}
                    className="p-3 bg-[#16251C] border border-gray-700 rounded-md cursor-pointer hover:bg-[#1A2B24] hover:border-green-500 hover:shadow-lg transition-all duration-200 group"
                  >
                    <div className="flex items-start justify-between">
                      <div className="flex-1">
                        <h4 className="font-medium text-white mb-1 group-hover:text-green-300">{template.name}</h4>
                        <p className="text-sm text-gray-400 mb-2 line-clamp-2">{template.description}</p>
                        <div className="flex items-center justify-between">
                          <span className={`inline-block px-2 py-1 text-xs rounded-full font-medium ${
                            template.category === 'Bug Fix' ? 'bg-red-100 text-red-800' :
                            template.category === 'Feature' ? 'bg-blue-100 text-blue-800' :
                            template.category === 'Security' ? 'bg-yellow-100 text-yellow-800' :
                            template.category === 'Performance' ? 'bg-purple-100 text-purple-800' :
                            template.category === 'Release' ? 'bg-green-100 text-green-800' :
                            'bg-gray-100 text-gray-800'
                          }`}>
                            {template.category}
                          </span>
                          <span className={`text-xs px-2 py-1 rounded-full ${
                            template.template.priority === 'critical' ? 'bg-red-600 text-white' :
                            template.template.priority === 'high' ? 'bg-orange-600 text-white' :
                            template.template.priority === 'medium' ? 'bg-blue-600 text-white' :
                            'bg-gray-600 text-white'
                          }`}>
                            {template.template.priority}
                          </span>
                        </div>
                      </div>
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        className="h-5 w-5 text-green-400 ml-2 flex-shrink-0 group-hover:text-green-300 transition-colors"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                      >
                        <path
                          strokeLinecap="round"
                          strokeLinejoin="round"
                          strokeWidth={2}
                          d="M9 5l7 7-7 7"
                        />
                      </svg>
                    </div>
                  </div>
                ))}
              </div>
            </div>
            
            <div className="mt-4 pt-3 border-t border-gray-700 flex justify-between items-center">
              <div className="text-xs text-gray-500">
                üí° –®–∞–±–ª–æ–Ω—ã –ø–æ–º–æ–≥–∞—é—Ç –±—ã—Å—Ç—Ä–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
              </div>
              <button
                onClick={() => setShowTemplates(false)}
                className="text-gray-400 hover:text-white text-sm underline transition-colors"
              >
                –û—Ç–º–µ–Ω–∏—Ç—å –≤—ã–±–æ—Ä —à–∞–±–ª–æ–Ω–∞
              </button>
            </div>
          </div>
        )}

        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          {/* Title */}
          <div className="md:col-span-2">
            <label className="block mb-2">
              <span className="text-gray-300">–ù–∞–∑–≤–∞–Ω–∏–µ *</span>
              <input
                type="text"
                value={taskData.title}
                onChange={(e) => handleChange("title", e.target.value)}
                className={`mt-1 block w-full rounded-md border p-2 text-white focus:outline-none focus:ring-2 focus:ring-green-500 ${
                  errors.title ? 'border-red-500 bg-[#0f1b16]' : 'border-gray-600 bg-[#0f1b16]'
                }`}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏"
              />
              {errors.title && <span className="text-red-400 text-sm">{errors.title}</span>}
            </label>
          </div>

          {/* Description */}
          <div className="md:col-span-2">
            <label className="block mb-2">
              <span className="text-gray-300">–û–ø–∏—Å–∞–Ω–∏–µ</span>
              <textarea
                rows={3}
                value={taskData.description}
                onChange={(e) => handleChange("description", e.target.value)}
                className="mt-1 block w-full rounded-md border border-gray-600 bg-[#0f1b16] p-2 text-white resize-y focus:outline-none focus:ring-2 focus:ring-green-500"
                placeholder="–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏..."
              />
            </label>
          </div>

          {/* Status and Priority */}
          <div>
            <label className="block mb-2">
              <span className="text-gray-300">–°—Ç–∞—Ç—É—Å</span>
              <CustomSelect
                options={statusOptions}
                value={taskData.status}
                onChange={(val) => handleChange("status", val)}
              />
            </label>
          </div>

          <div>
            <label className="block mb-2">
              <span className="text-gray-300">–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç</span>
              <CustomSelect
                options={priorityOptions}
                value={taskData.priority}
                onChange={(val) => handleChange("priority", val)}
              />
            </label>
          </div>

          {/* Task Type and Due Date */}
          <div>
            <label className="block mb-2">
              <span className="text-gray-300">–¢–∏–ø –∑–∞–¥–∞—á–∏</span>
              <CustomSelect
                options={taskTypeOptions}
                value={taskData.task_type}
                onChange={(val) => handleChange("task_type", val)}
              />
            </label>
          </div>

          <div>
            <label className="block mb-2">
              <span className="text-gray-300 flex items-center">
                <input
                  type="checkbox"
                  checked={taskData.no_deadline}
                  onChange={(e) => handleChange("no_deadline", e.target.checked)}
                  className="mr-2"
                />
                –ë–µ–∑ —Å—Ä–æ–∫–∞
              </span>
            </label>
            {!taskData.no_deadline && (
              <div className="space-y-2">
                <label className="block">
                  <span className="text-gray-300">–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞</span>
                  <input
                    type="date"
                    value={taskData.start_date}
                    onChange={(e) => handleChange("start_date", e.target.value)}
                    className="mt-1 block w-full rounded-md border border-gray-600 bg-[#0f1b16] p-2 text-white focus:outline-none focus:ring-2 focus:ring-green-500"
                  />
                </label>
                <label className="block">
                  <span className="text-gray-300">–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è</span>
                  <input
                    type="date"
                    value={taskData.due_date}
                    onChange={(e) => handleChange("due_date", e.target.value)}
                    className="mt-1 block w-full rounded-md border border-gray-600 bg-[#0f1b16] p-2 text-white focus:outline-none focus:ring-2 focus:ring-green-500"
                  />
                </label>
              </div>
            )}
            {taskData.no_deadline && (
              <div className="text-sm text-gray-400 italic">
                –°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: –ë–µ–∑ —Å—Ä–æ–∫–∞
              </div>
            )}
          </div>

          {/* Assignee and Estimated Hours */}
          <div>
            <label className="block mb-2">
              <span className="text-gray-300">–û—Ü–µ–Ω–∫–∞ –≤ —á–∞—Å–∞—Ö</span>
              <input
                type="number"
                step="0.5"
                min="0"
                value={taskData.estimated_hours}
                onChange={(e) => handleChange("estimated_hours", e.target.value)}
                className={`mt-1 block w-full rounded-md border p-2 text-white focus:outline-none focus:ring-2 focus:ring-green-500 ${
                  errors.estimated_hours ? 'border-red-500 bg-[#0f1b16]' : 'border-gray-600 bg-[#0f1b16]'
                }`}
                placeholder="0.0"
              />
              {errors.estimated_hours && <span className="text-red-400 text-sm">{errors.estimated_hours}</span>}
            </label>
          </div>

          {/* Tags */}
          <div className="md:col-span-2">
            <label className="block mb-2">
              <span className="text-gray-300">–¢–µ–≥–∏</span>
              <TaskTags
                tags={taskData.tags ? taskData.tags.split(',').map(tag => tag.trim()).filter(tag => tag) : []}
                onTagsChange={(tags) => handleChange("tags", tags.join(', '))}
              />
            </label>
          </div>

          <div className="form-group">
            <label>–¢–∏–ø –∑–∞–¥–∞—á–∏</label>
            <CustomSelect
              value={taskData.task_type}
              onChange={(value) => handleChange('task_type', value)}
              options={[
                { value: 'task', label: '–ó–∞–¥–∞—á–∞' },
                { value: 'bug', label: '–û—à–∏–±–∫–∞' },
                { value: 'feature', label: '–§—É–Ω–∫—Ü–∏—è' },
                { value: 'story', label: '–ò—Å—Ç–æ—Ä–∏—è' },
                { value: 'epic', label: '–≠–ø–∏–∫' },
                { value: 'subtask', label: '–ü–æ–¥–∑–∞–¥–∞—á–∞' }
              ]}
            />
          </div>

          <div className="form-group">
            <label>–ü—Ä–æ–µ–∫—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</label>
            <CustomSelect
              value={taskData.project_id}
              onChange={(value) => handleChange('project_id', value)}
              options={[
                { value: null, label: '–ë–µ–∑ –ø—Ä–æ–µ–∫—Ç–∞' },
                ...projects.map(project => ({
                  value: project.id,
                  label: project.name
                }))
              ]}
              placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç"
            />
          </div>
        </div>

        <div className="flex justify-end space-x-3 mt-6">
          <button
            onClick={onClose}
            className="px-4 py-2 rounded-md bg-gray-700 hover:bg-gray-600 transition"
          >
            –û—Ç–º–µ–Ω–∞
          </button>
          <button
            onClick={handleSubmit}
            className="px-4 py-2 rounded-md bg-green-600 hover:bg-green-700 transition"
          >
            –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É
          </button>
        </div>
      </div>
    </div>
  );
}
