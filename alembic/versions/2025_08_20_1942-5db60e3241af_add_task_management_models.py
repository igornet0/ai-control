"""add_task_management_models

Revision ID: 5db60e3241af
Revises: beed956b677a
Create Date: 2025-08-20 19:42:18.126796

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5db60e3241af'
down_revision: Union[str, None] = 'beed956b677a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('task_templates',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('task_type', sa.String(length=50), nullable=False),
    sa.Column('priority', sa.String(length=50), nullable=False),
    sa.Column('template_fields', sa.JSON(), nullable=False),
    sa.Column('estimated_hours', sa.Float(), nullable=True),
    sa.Column('created_by', sa.BigInteger(), nullable=False),
    sa.Column('organization_id', sa.BigInteger(), nullable=True),
    sa.Column('department_id', sa.BigInteger(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('fk_task_templates_created_by_users')),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], name=op.f('fk_task_templates_department_id_departments')),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name=op.f('fk_task_templates_organization_id_organizations')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_templates'))
    )
    op.create_index(op.f('ix_task_templates_name'), 'task_templates', ['name'], unique=False)
    op.create_table('task_comments',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.BigInteger(), nullable=False),
    sa.Column('author_id', sa.BigInteger(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('is_internal', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name=op.f('fk_task_comments_author_id_users')),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name=op.f('fk_task_comments_task_id_tasks')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_comments'))
    )
    op.create_index(op.f('ix_task_comments_task_id'), 'task_comments', ['task_id'], unique=False)
    op.create_table('task_dependencies',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.BigInteger(), nullable=False),
    sa.Column('depends_on_task_id', sa.BigInteger(), nullable=False),
    sa.Column('dependency_type', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['depends_on_task_id'], ['tasks.id'], name=op.f('fk_task_dependencies_depends_on_task_id_tasks')),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name=op.f('fk_task_dependencies_task_id_tasks')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_dependencies'))
    )
    op.create_index(op.f('ix_task_dependencies_depends_on_task_id'), 'task_dependencies', ['depends_on_task_id'], unique=False)
    op.create_index(op.f('ix_task_dependencies_task_id'), 'task_dependencies', ['task_id'], unique=False)
    op.create_table('task_labels',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('color', sa.String(length=7), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name=op.f('fk_task_labels_task_id_tasks')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_labels'))
    )
    op.create_index(op.f('ix_task_labels_task_id'), 'task_labels', ['task_id'], unique=False)
    op.create_table('task_time_logs',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('hours', sa.Float(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name=op.f('fk_task_time_logs_task_id_tasks')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_task_time_logs_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_time_logs'))
    )
    op.create_index(op.f('ix_task_time_logs_task_id'), 'task_time_logs', ['task_id'], unique=False)
    op.create_table('task_watchers',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('notification_preferences', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name=op.f('fk_task_watchers_task_id_tasks')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_task_watchers_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_watchers'))
    )
    op.create_index(op.f('ix_task_watchers_task_id'), 'task_watchers', ['task_id'], unique=False)
    op.add_column('tasks', sa.Column('task_type', sa.String(length=50), nullable=False))
    op.add_column('tasks', sa.Column('visibility', sa.String(length=50), nullable=False))
    op.add_column('tasks', sa.Column('parent_id', sa.BigInteger(), nullable=True))
    op.add_column('tasks', sa.Column('epic_id', sa.BigInteger(), nullable=True))
    op.add_column('tasks', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('tasks', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.add_column('tasks', sa.Column('due_date', sa.DateTime(), nullable=True))
    op.add_column('tasks', sa.Column('start_date', sa.DateTime(), nullable=True))
    op.add_column('tasks', sa.Column('completed_at', sa.DateTime(), nullable=True))
    op.add_column('tasks', sa.Column('estimated_hours', sa.Float(), nullable=True))
    op.add_column('tasks', sa.Column('actual_hours', sa.Float(), nullable=True))
    op.add_column('tasks', sa.Column('progress_percentage', sa.Integer(), nullable=False))
    op.add_column('tasks', sa.Column('tags', sa.JSON(), nullable=True))
    op.add_column('tasks', sa.Column('custom_fields', sa.JSON(), nullable=True))
    op.add_column('tasks', sa.Column('attachments', sa.JSON(), nullable=True))
    op.add_column('tasks', sa.Column('reviewer_id', sa.BigInteger(), nullable=True))
    op.add_column('tasks', sa.Column('organization_id', sa.BigInteger(), nullable=True))
    op.add_column('tasks', sa.Column('department_id', sa.BigInteger(), nullable=True))
    op.alter_column('tasks', 'description',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.Text(),
               existing_nullable=True)
    op.create_index(op.f('ix_tasks_department_id'), 'tasks', ['department_id'], unique=False)
    op.create_index(op.f('ix_tasks_due_date'), 'tasks', ['due_date'], unique=False)
    op.create_index(op.f('ix_tasks_executor_id'), 'tasks', ['executor_id'], unique=False)
    op.create_index(op.f('ix_tasks_organization_id'), 'tasks', ['organization_id'], unique=False)
    op.create_index(op.f('ix_tasks_owner_id'), 'tasks', ['owner_id'], unique=False)
    op.create_index(op.f('ix_tasks_priority'), 'tasks', ['priority'], unique=False)
    op.create_index(op.f('ix_tasks_reviewer_id'), 'tasks', ['reviewer_id'], unique=False)
    op.create_index(op.f('ix_tasks_status'), 'tasks', ['status'], unique=False)
    op.create_index(op.f('ix_tasks_task_type'), 'tasks', ['task_type'], unique=False)
    op.create_index(op.f('ix_tasks_title'), 'tasks', ['title'], unique=False)
    op.create_foreign_key(op.f('fk_tasks_department_id_departments'), 'tasks', 'departments', ['department_id'], ['id'])
    op.create_foreign_key(op.f('fk_tasks_parent_id_tasks'), 'tasks', 'tasks', ['parent_id'], ['id'])
    op.create_foreign_key(op.f('fk_tasks_reviewer_id_users'), 'tasks', 'users', ['reviewer_id'], ['id'])
    op.create_foreign_key(op.f('fk_tasks_organization_id_organizations'), 'tasks', 'organizations', ['organization_id'], ['id'])
    op.create_foreign_key(op.f('fk_tasks_epic_id_tasks'), 'tasks', 'tasks', ['epic_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_tasks_epic_id_tasks'), 'tasks', type_='foreignkey')
    op.drop_constraint(op.f('fk_tasks_organization_id_organizations'), 'tasks', type_='foreignkey')
    op.drop_constraint(op.f('fk_tasks_reviewer_id_users'), 'tasks', type_='foreignkey')
    op.drop_constraint(op.f('fk_tasks_parent_id_tasks'), 'tasks', type_='foreignkey')
    op.drop_constraint(op.f('fk_tasks_department_id_departments'), 'tasks', type_='foreignkey')
    op.drop_index(op.f('ix_tasks_title'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_task_type'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_status'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_reviewer_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_priority'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_owner_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_organization_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_executor_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_due_date'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_department_id'), table_name='tasks')
    op.alter_column('tasks', 'description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=500),
               existing_nullable=True)
    op.drop_column('tasks', 'department_id')
    op.drop_column('tasks', 'organization_id')
    op.drop_column('tasks', 'reviewer_id')
    op.drop_column('tasks', 'attachments')
    op.drop_column('tasks', 'custom_fields')
    op.drop_column('tasks', 'tags')
    op.drop_column('tasks', 'progress_percentage')
    op.drop_column('tasks', 'actual_hours')
    op.drop_column('tasks', 'estimated_hours')
    op.drop_column('tasks', 'completed_at')
    op.drop_column('tasks', 'start_date')
    op.drop_column('tasks', 'due_date')
    op.drop_column('tasks', 'updated_at')
    op.drop_column('tasks', 'created_at')
    op.drop_column('tasks', 'epic_id')
    op.drop_column('tasks', 'parent_id')
    op.drop_column('tasks', 'visibility')
    op.drop_column('tasks', 'task_type')
    op.drop_index(op.f('ix_task_watchers_task_id'), table_name='task_watchers')
    op.drop_table('task_watchers')
    op.drop_index(op.f('ix_task_time_logs_task_id'), table_name='task_time_logs')
    op.drop_table('task_time_logs')
    op.drop_index(op.f('ix_task_labels_task_id'), table_name='task_labels')
    op.drop_table('task_labels')
    op.drop_index(op.f('ix_task_dependencies_task_id'), table_name='task_dependencies')
    op.drop_index(op.f('ix_task_dependencies_depends_on_task_id'), table_name='task_dependencies')
    op.drop_table('task_dependencies')
    op.drop_index(op.f('ix_task_comments_task_id'), table_name='task_comments')
    op.drop_table('task_comments')
    op.drop_index(op.f('ix_task_templates_name'), table_name='task_templates')
    op.drop_table('task_templates')
    # ### end Alembic commands ###
