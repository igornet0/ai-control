"""Add organization hierarchy models

Revision ID: a30e75af9e64
Revises: 7be58da0dec0
Create Date: 2025-08-20 16:52:47.886770

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a30e75af9e64'
down_revision: Union[str, None] = '7be58da0dec0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organizations',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('domain', sa.String(length=255), nullable=True),
    sa.Column('logo_url', sa.String(length=500), nullable=True),
    sa.Column('settings', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_organizations'))
    )
    op.create_table('departments',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('organization_id', sa.BigInteger(), nullable=False),
    sa.Column('manager_id', sa.BigInteger(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['manager_id'], ['users.id'], name=op.f('fk_departments_manager_id_users')),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name=op.f('fk_departments_organization_id_organizations')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_departments'))
    )
    op.create_table('permissions',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('resource', sa.String(length=255), nullable=False),
    sa.Column('action', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_permissions')),
    sa.UniqueConstraint('name', name=op.f('uq_permissions_name'))
    )
    op.create_table('role_permissions',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('permission_id', sa.BigInteger(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], name=op.f('fk_role_permissions_permission_id_permissions')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_role_permissions'))
    )
    op.add_column('users', sa.Column('manager_id', sa.BigInteger(), nullable=True))
    op.add_column('users', sa.Column('department_id', sa.BigInteger(), nullable=True))
    op.add_column('users', sa.Column('organization_id', sa.BigInteger(), nullable=True))
    op.add_column('users', sa.Column('position', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('phone', sa.String(length=50), nullable=True))
    op.add_column('users', sa.Column('avatar_url', sa.String(length=500), nullable=True))
    op.add_column('users', sa.Column('bio', sa.Text(), nullable=True))
    op.add_column('users', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('last_login', sa.DateTime(), nullable=True))
    
    # Заполняем существующие записи значениями по умолчанию
    op.execute("UPDATE users SET created_at = NOW(), updated_at = NOW() WHERE created_at IS NULL")
    
    # Делаем колонки NOT NULL
    op.alter_column('users', 'created_at', nullable=False)
    op.alter_column('users', 'updated_at', nullable=False)
    op.create_foreign_key(op.f('fk_users_organization_id_organizations'), 'users', 'organizations', ['organization_id'], ['id'])
    op.create_foreign_key(op.f('fk_users_department_id_departments'), 'users', 'departments', ['department_id'], ['id'])
    op.create_foreign_key(op.f('fk_users_manager_id_users'), 'users', 'users', ['manager_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_users_manager_id_users'), 'users', type_='foreignkey')
    op.drop_constraint(op.f('fk_users_department_id_departments'), 'users', type_='foreignkey')
    op.drop_constraint(op.f('fk_users_organization_id_organizations'), 'users', type_='foreignkey')
    op.drop_column('users', 'last_login')
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'bio')
    op.drop_column('users', 'avatar_url')
    op.drop_column('users', 'phone')
    op.drop_column('users', 'position')
    op.drop_column('users', 'organization_id')
    op.drop_column('users', 'department_id')
    op.drop_column('users', 'manager_id')
    op.drop_table('role_permissions')
    op.drop_table('permissions')
    op.drop_table('departments')
    op.drop_table('organizations')
    # ### end Alembic commands ###
