"""rename_old_task_tables

Revision ID: 107b00f2e52e
Revises: 5db60e3241af
Create Date: 2025-08-20 19:45:17.897493

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '107b00f2e52e'
down_revision: Union[str, None] = '5db60e3241af'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('task_priority_olds',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_priority_olds')),
    sa.UniqueConstraint('name', name=op.f('uq_task_priority_olds_name'))
    )
    op.create_table('task_status_olds',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_status_olds')),
    sa.UniqueConstraint('name', name=op.f('uq_task_status_olds_name'))
    )
    op.create_table('task_type_olds',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_type_olds')),
    sa.UniqueConstraint('name', name=op.f('uq_task_type_olds_name'))
    )
    op.drop_table('task_prioritys')
    op.drop_table('task_statuss')
    op.drop_table('task_types')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('task_types',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_types')),
    sa.UniqueConstraint('name', name=op.f('uq_task_types_name'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('task_statuss',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_statuss')),
    sa.UniqueConstraint('name', name=op.f('uq_task_statuss_name'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('task_prioritys',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_prioritys')),
    sa.UniqueConstraint('name', name=op.f('uq_task_prioritys_name'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.drop_table('task_type_olds')
    op.drop_table('task_status_olds')
    op.drop_table('task_priority_olds')
    # ### end Alembic commands ###
